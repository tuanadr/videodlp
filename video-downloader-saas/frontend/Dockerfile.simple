# =============================================================================
# SIMPLIFIED OPTIMIZED DOCKERFILE FOR REACT FRONTEND
# =============================================================================

# Build stage
FROM node:18-alpine AS build

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --audit && npm cache clean --force

# Copy source code
COPY . .

# Set build environment variables
ARG REACT_APP_API_URL
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV ESLINT_NO_DEV_ERRORS=true
ENV DISABLE_ESLINT_PLUGIN=true
ENV CI=false
ENV GENERATE_SOURCEMAP=false
ENV NODE_OPTIONS="--max-old-space-size=2048"

# Build the application
RUN npm run build

# Remove source maps for security
RUN find build -name "*.map" -delete || true

# Production stage
FROM nginx:1.25-alpine AS production

# Install security updates and tools
RUN apk update && apk upgrade && \
    apk add --no-cache dumb-init curl && \
    rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1001 -S nginx-app && \
    adduser -S nginx-app -u 1001

# Copy nginx configurations
COPY nginx/nginx-optimized.conf /etc/nginx/nginx.conf
COPY nginx/site-optimized.conf /etc/nginx/conf.d/default.conf

# Copy built application
COPY --from=build --chown=nginx-app:nginx-app /app/build /usr/share/nginx/html

# Create health check file
RUN echo "OK" > /usr/share/nginx/html/health.txt && \
    chown nginx-app:nginx-app /usr/share/nginx/html/health.txt

# Set proper permissions
RUN chown -R nginx-app:nginx-app /usr/share/nginx/html && \
    chown -R nginx-app:nginx-app /etc/nginx && \
    chmod -R 755 /usr/share/nginx/html && \
    chmod -R 644 /etc/nginx/conf.d && \
    chmod 644 /etc/nginx/nginx.conf

# Create directories for nginx
RUN mkdir -p /var/cache/nginx /var/log/nginx /var/run && \
    chown -R nginx-app:nginx-app /var/cache/nginx /var/log/nginx /var/run && \
    chmod -R 755 /var/cache/nginx /var/log/nginx /var/run

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:80/health.txt || exit 1

# Expose port
EXPOSE 80

# Keep root user for nginx to work properly
# USER nginx-app

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Start nginx
CMD ["nginx", "-g", "daemon off;"]